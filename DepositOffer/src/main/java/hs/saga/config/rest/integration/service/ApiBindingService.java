// THIS FILE IS AUTOGENERATED. MODIFICATIONS WILL BE LOST!

package hs.saga.config.rest.integration.service;

import hs.saga.config.rest.integration.config.BindingProperties;
import hs.saga.config.rest.integration.model.ApiBinding;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import java.util.Optional;

import static hs.saga.config.rest.util.TextFormatter.format;

/**
 * Service to retrieve API Binding
 *
 * @Generated
 */
@Service
public class ApiBindingService {

  private static final Logger log = LoggerFactory.getLogger(ApiBindingService.class);

  // private KubernetesServiceBindingService kubernetesService;

  @Value("${de.knowis.cp.deployment.identifier}")
  private String deploymentIdentifier;

  // Local binding properties configuration
  private BindingProperties localBindingProperties;

    public ApiBindingService(BindingProperties localBindingProperties) {
        this.localBindingProperties = localBindingProperties;
    }

//  public ApiBindingService(KubernetesServiceBindingService kubernetesService, BindingProperties localBinding) {
//    this.kubernetesService = kubernetesService;
//    this.localBindingProperties =  localBinding;
//  }

 public Optional<ApiBinding> getApiBinding(String bindingName) {

     String bindingSecret = format("{}-api-{}", deploymentIdentifier, bindingName);
     log.info("Checking for api binding secret {}", bindingSecret);

     ApiBinding result = null;
//    try {
//      result = kubernetesService.getBinding(bindingSecret, ApiBinding.class);
//    } catch (InvalidBindingException e) {
//      // load binding from local binding properties
//      result = this.localBindingProperties.getBindingProperties().get(bindingName);
//
//      if(result != null) {
//         log.trace("Could not load kubernetes api binding secret {}", bindingSecret, e);
//         log.info("Using local binding for {}", bindingName);
//      } else {
//        log.warn("Could not load kubernetes api binding secret {}", bindingSecret, e);
//        log.warn("No local binding found for {}", bindingName);
//      }
//    }

     // load binding from local binding properties
     result = this.localBindingProperties.getBindingProperties().get(bindingName);

     if (result != null) {
         log.trace("Could not load kubernetes api binding secret {}", bindingSecret);
         log.info("Using local binding for {}", bindingName);
     } else {
         log.warn("Could not load kubernetes api binding secret {}", bindingSecret);
         log.warn("No local binding found for {}", bindingName);
     }
     return Optional.ofNullable(result);
 }
}
